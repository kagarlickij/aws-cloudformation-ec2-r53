AWSTemplateFormatVersion: "2010-09-09"

Metadata:
  Author: Dmitriy Kagarlickij

Parameters:
  InstanceType:
    Type: String
  HostedZone:
    Type: String
  RecordSetName:
    Type: String
  NestedTemplateUrl:
    Type: String
  Environment:
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      "VpcId": "vpc-244ee25e"
      "AMI": "ami-0de53d8956e8dcf80"
      "KeyName": "test-aws3-virginia"
      "Instance1AvailabilityZone": "us-east-1a"
      "Instance2AvailabilityZone": "us-east-1b"
      "Instance1Subnet": "subnet-d022bf8c"
      "Instance2Subnet": "subnet-c622b2a1"
    eu-west-1:
      "VpcId": "vpc-8f85ade9"
      "AMI": "ami-07683a44e80cd32c5"
      "KeyName": "test-aws3-ireland"
      "Instance1AvailabilityZone": "eu-west-1a"
      "Instance2AvailabilityZone": "eu-west-1b"
      "Instance1Subnet": "subnet-3c1bbc66"
      "Instance2Subnet": "subnet-46bbde20"

Resources:
  InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Join [ "-", [ "InstanceRole", !Ref Environment] ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
        - "arn:aws:iam::aws:policy/CloudWatchFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
      - !Ref InstanceRole

  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Join [ "-", [ "InstanceSecurityGroup", !Ref Environment] ]
      GroupDescription: "InstanceSecurityGroup"
      VpcId: !FindInMap [RegionMap, !Ref "AWS::Region", VpcId]
      SecurityGroupIngress:
        - IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"

  Instance1:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Ref NestedTemplateUrl
      Parameters:
        AMI: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
        InstanceType: !Ref InstanceType
        KeyName: !FindInMap [RegionMap, !Ref "AWS::Region", KeyName]
        IamInstanceProfile: !Ref InstanceProfile
        SecurityGroup: !Ref InstanceSecurityGroup
        AvailabilityZone: !FindInMap [RegionMap, !Ref "AWS::Region", Instance1AvailabilityZone]
        SubnetId: !FindInMap [RegionMap, !Ref "AWS::Region", Instance1Subnet]
        InstanceName: "Instance1"

  Instance2:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Ref NestedTemplateUrl
      Parameters:
        AMI: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
        InstanceType: !Ref InstanceType
        KeyName: !FindInMap [RegionMap, !Ref "AWS::Region", KeyName]
        IamInstanceProfile: !Ref InstanceProfile
        SecurityGroup: !Ref InstanceSecurityGroup
        AvailabilityZone: !FindInMap [RegionMap, !Ref "AWS::Region", Instance2AvailabilityZone]
        SubnetId: !FindInMap [RegionMap, !Ref "AWS::Region", Instance2Subnet]
        InstanceName: "Instance2"

  Instance1Alarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmName: !Join [ "-", [ "Instance1Alarm", !Ref Environment] ]
      ComparisonOperator: "LessThanThreshold"
      Dimensions:
        - Name: "InstanceName"
          Value: "Instance1"
      EvaluationPeriods: 1
      MetricName: "radiusd-status"
      Namespace: "radiusd"
      Period: 300
      Statistic: "Average"
      Threshold: 1
      TreatMissingData: "breaching"

  Instance1HealthCheck:
    Type: "AWS::Route53::HealthCheck"
    Properties:
      HealthCheckConfig:
        Type: CLOUDWATCH_METRIC
        AlarmIdentifier:
            Name: !Ref Instance1Alarm
            Region: !Ref "AWS::Region"
      HealthCheckTags:
        - Key: Name
          Value: !Join [ "-", [ "Instance1HealthCheck", !Ref Environment] ]

  RecordSet:
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneName: !Join [ "", [ !Ref HostedZone, "." ] ]
      Name: !Join [ "", [ !Ref RecordSetName, "." ] ]
      Type: A
      TTL: "30"
      ResourceRecords:
        - Fn::GetAtt: [Instance1, Outputs.ElasticIPAddress]
        - Fn::GetAtt: [Instance2, Outputs.ElasticIPAddress]
      Failover: PRIMARY
      SetIdentifier: !Join [ "", [ !Ref RecordSetName, "-Primary" ] ]
      HealthCheckId: !Ref Instance1HealthCheck

Outputs:
  Instance1IpAddress:
    Value:
      Fn::GetAtt: [Instance1, Outputs.ElasticIPAddress]
  Instance2IpAddress:
    Value:
      Fn::GetAtt: [Instance2, Outputs.ElasticIPAddress]
